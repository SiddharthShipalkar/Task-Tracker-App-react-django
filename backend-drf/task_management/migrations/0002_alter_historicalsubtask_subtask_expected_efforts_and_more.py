# Generated by Django 5.2.7 on 2025-10-25 05:04

import datetime
import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('organization_structure', '0001_initial'),
        ('task_management', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='historicalsubtask',
            name='subtask_expected_efforts',
            field=models.DurationField(default=datetime.timedelta(0), help_text='Expected time in HH:MM:SS format'),
        ),
        migrations.AlterField(
            model_name='subtask',
            name='subtask_expected_efforts',
            field=models.DurationField(default=datetime.timedelta(0), help_text='Expected time in HH:MM:SS format'),
        ),
        migrations.CreateModel(
            name='HistoricalTask',
            fields=[
                ('task_id', models.IntegerField(blank=True, db_index=True)),
                ('task_name', models.CharField(max_length=255)),
                ('task_description', models.TextField(blank=True, null=True)),
                ('task_status', models.CharField(choices=[('NEW', 'New'), ('ASSIGNED', 'Assigned'), ('IN_PROGRESS', 'In Progress'), ('ON_HOLD', 'On Hold'), ('FIXED', 'Fixed')], default='NEW', max_length=20)),
                ('task_priority', models.CharField(choices=[('HIGH', 'High'), ('MEDIUM', 'Medium'), ('LOW', 'Low')], default='LOW', max_length=20)),
                ('task_deviation', models.CharField(blank=True, choices=[('BEST_TRACK', 'Best Track'), ('GOOD_TRACK', 'Good Track'), ('ON_TRACK', 'On Track'), ('LOW_DEVIATION', 'Low Deviation'), ('HIGH_DEVIATION', 'High Deviation')], max_length=20, null=True)),
                ('task_quality', models.CharField(blank=True, choices=[('BEST', 'Best'), ('GOOD', 'Good'), ('MODERATE', 'Moderate'), ('LOW', 'Low'), ('BAD', 'Bad')], max_length=20, null=True)),
                ('subtask_count', models.PositiveIntegerField(default=1)),
                ('task_expected_efforts', models.DurationField(blank=True, null=True)),
                ('task_estimated_efforts', models.DurationField(default=datetime.timedelta(0))),
                ('task_actual_efforts', models.DurationField(default=datetime.timedelta(0))),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('assigned_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('subtask', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='task_management.subtask')),
                ('task_category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='task_management.taskcategory')),
                ('team', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organization_structure.team')),
            ],
            options={
                'verbose_name': 'historical task',
                'verbose_name_plural': 'historical tasks',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('task_id', models.AutoField(primary_key=True, serialize=False)),
                ('task_name', models.CharField(max_length=255)),
                ('task_description', models.TextField(blank=True, null=True)),
                ('task_status', models.CharField(choices=[('NEW', 'New'), ('ASSIGNED', 'Assigned'), ('IN_PROGRESS', 'In Progress'), ('ON_HOLD', 'On Hold'), ('FIXED', 'Fixed')], default='NEW', max_length=20)),
                ('task_priority', models.CharField(choices=[('HIGH', 'High'), ('MEDIUM', 'Medium'), ('LOW', 'Low')], default='LOW', max_length=20)),
                ('task_deviation', models.CharField(blank=True, choices=[('BEST_TRACK', 'Best Track'), ('GOOD_TRACK', 'Good Track'), ('ON_TRACK', 'On Track'), ('LOW_DEVIATION', 'Low Deviation'), ('HIGH_DEVIATION', 'High Deviation')], max_length=20, null=True)),
                ('task_quality', models.CharField(blank=True, choices=[('BEST', 'Best'), ('GOOD', 'Good'), ('MODERATE', 'Moderate'), ('LOW', 'Low'), ('BAD', 'Bad')], max_length=20, null=True)),
                ('subtask_count', models.PositiveIntegerField(default=1)),
                ('task_expected_efforts', models.DurationField(blank=True, null=True)),
                ('task_estimated_efforts', models.DurationField(default=datetime.timedelta(0))),
                ('task_actual_efforts', models.DurationField(default=datetime.timedelta(0))),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_tasks', to=settings.AUTH_USER_MODEL)),
                ('subtask', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='task_management.subtask')),
                ('task_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='task_management.taskcategory')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='organization_structure.team')),
            ],
        ),
    ]
